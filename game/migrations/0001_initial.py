# Generated by Django 5.1.5 on 2025-01-19 14:40

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('telegram_id', models.BigIntegerField(unique=True)),
                ('photo_url', models.URLField(blank=True, null=True)),
                ('auth_date', models.IntegerField(null=True)),
                ('ton_balance', models.DecimalField(decimal_places=6, default=0, max_digits=18)),
                ('platinum_balance', models.DecimalField(decimal_places=6, default=0, max_digits=18)),
                ('gold_balance', models.DecimalField(decimal_places=6, default=0, max_digits=18)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='custom_user_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set', to='auth.permission', verbose_name='user permissions')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('energy_altar', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('energy_fire', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('energy_waterfall', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('food', models.IntegerField(default=0)),
                ('wood', models.IntegerField(default=0)),
                ('last_altar_activation', models.DateTimeField(null=True)),
                ('last_campfire_start', models.DateTimeField(null=True)),
                ('last_food_gathering', models.DateTimeField(null=True)),
                ('last_wood_gathering', models.DateTimeField(null=True)),
                ('last_waterfall_boost', models.DateTimeField(null=True)),
                ('enhancements_count', models.IntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='game.user')),
            ],
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['telegram_id'], name='game_user_telegra_72bda3_idx'),
        ),
        migrations.AddIndex(
            model_name='playerstate',
            index=models.Index(fields=['user'], name='game_player_user_id_ed1511_idx'),
        ),
        migrations.AddIndex(
            model_name='playerstate',
            index=models.Index(fields=['last_altar_activation'], name='game_player_last_al_5f71a8_idx'),
        ),
        migrations.AddIndex(
            model_name='playerstate',
            index=models.Index(fields=['last_campfire_start'], name='game_player_last_ca_1391fc_idx'),
        ),
    ]
